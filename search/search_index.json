{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Docker Notes","text":"<p>Welcome to the Docker notes, a resource for understanding and working with Docker. For complete and official documentation, visit the Docker Documentation Page.</p> <ol> <li> <p>Quick Guide: Get started with Docker through a concise guide covering essential concepts and basic usage.</p> </li> <li> <p>Commands: Explore a comprehensive list of Docker commands and their functionalities to efficiently manage containers and images.</p> </li> <li> <p>Sample Docker Compose File: View a sample Docker Compose file to understand how to define and run multi-container Docker applications.</p> </li> <li> <p>Database Using Docker Compose File: Access a Docker Compose file specifically for setting up and managing databases within Docker containers.</p> </li> </ol> <p>Dive into each section to enhance your Docker skills and streamline your containerization processes!</p>"},{"location":"commands/","title":"Docker Commands","text":""},{"location":"commands/#docker-basic-commands","title":"Docker Basic Commands","text":"<p>check docker version</p> <pre><code>docker --version or docker -v\n</code></pre> <p>display system wide information about docker</p> <pre><code>docker info\n</code></pre> <p>download an image from Docker Hub</p> <pre><code>docker pull &lt;image name&gt;\n</code></pre> <p>list local docker images</p> <pre><code>docker images or docker image ls\n</code></pre> <p>list running containers</p> <pre><code>docker ps or docker container ls\n</code></pre> <p>list all containers including stopped ones</p> <pre><code>docker ps -a or docker container ls -a\n</code></pre> <p>create and start a new container from an image</p> <pre><code>docker run &lt;options&gt; &lt;image name&gt;\n</code></pre>"},{"location":"commands/#docker-container-lifecycle","title":"Docker Container Lifecycle","text":"<p>start a stopped container</p> <pre><code>docker start &lt;container name/ id&gt;\n</code></pre> <p>stop a running container gracefully</p> <pre><code>docker stop &lt;container name/ id&gt;\n</code></pre> <p>forcefully stop a running container</p> <pre><code>docker kill &lt;container name/ id&gt;\n</code></pre> <p>restart a container</p> <pre><code>docker restart &lt;container name/ id&gt;\n</code></pre> <p>remove a stopped container</p> <pre><code>docker rm &lt;container name/ id&gt;\n</code></pre>"},{"location":"commands/#images","title":"Images","text":"<p>Build a Docker image from a dockerfile</p> <pre><code>docker build -t &lt;image name&gt; &lt;path to dockerfile&gt;\n</code></pre> <p>remove an image</p> <pre><code>docker rmi &lt;image name&gt;\n</code></pre> <p>remove all unused images</p> <pre><code>docker image prune\n</code></pre>"},{"location":"commands/#docker-compose","title":"docker compose","text":"<p>start services defined in a docker compose file</p> <pre><code>docker-compose up\n</code></pre> <p>stop and remove services defined in a docker compose file</p> <pre><code>docker-compose down\n</code></pre> <p>list services in a compose file and their status</p> <pre><code>docker-compose ps\n</code></pre> <p>view logs for a specific service</p> <pre><code>docker-compose logs &lt;service_name&gt;\n</code></pre> <p>run a command in a running service container</p> <pre><code>docker-compose exec &lt;service_name&gt; &lt;command&gt;\n</code></pre>"},{"location":"commands/#volumes","title":"Volumes","text":"<p>create a named volume</p> <pre><code>docker volume create &lt;volume name&gt;\n</code></pre> <p>mount a volume to a container</p> <pre><code>docker run -v &lt;volumn name&gt;:&lt;container path&gt;\n</code></pre> <p>list volumes</p> <pre><code>docker volume ls\n</code></pre> <p>remove a volume</p> <pre><code>docker volume rm &lt;volumn name&gt;\n</code></pre>"},{"location":"commands/#docker-registry-and-hub","title":"Docker Registry and Hub","text":"<p>login to docker registry</p> <pre><code>docker login\n</code></pre> <p>push an image to the registry</p> <pre><code>docker push &lt;image name&gt;\n</code></pre> <p>pull an image from the registry</p> <pre><code>docker pull &lt;image name&gt;\n</code></pre>"},{"location":"commands/#networks","title":"Networks","text":"<p>create a user-defined network</p> <pre><code>docker network create &lt;network name&gt;\n</code></pre> <p>list networks</p> <pre><code>docker network ls\n</code></pre> <p>connect a container to a network</p> <pre><code>docker network connect &lt;network name&gt; &lt;container name/ id&gt;\n</code></pre> <p>disconnect a container from a network</p> <pre><code>docker network disconnect &lt;network name&gt; &lt;container name/ id&gt;\n</code></pre> <p>inspect a network</p> <pre><code>docker network inspect &lt;network name&gt;\n</code></pre>"},{"location":"commands/#logs-and-debugging","title":"Logs and Debugging","text":"<p>view container logs</p> <pre><code>docker logs &lt;container name/ id&gt;\n</code></pre> <p>start an interactive shell in a running container</p> <pre><code>docker exec -it &lt;container name/ id&gt;\n</code></pre> <p>display real-time container resource usage.</p> <pre><code>docker stats &lt;container name/ id&gt;\n</code></pre> <p>get results from container</p> <pre><code>docker exec &lt;conainer name/ id&gt; &lt;command to execute&gt;\n</code></pre>"},{"location":"commands/#cleanup","title":"Cleanup","text":"<p>remove all stopped containers, unused networks, and images</p> <pre><code>docker system prune\n</code></pre> <p>remove all stopped containers</p> <pre><code>docker container prune\n</code></pre> <p>remove all unused images</p> <pre><code>docker image prune\n</code></pre> <p>remove all unused volumes</p> <pre><code>docker volumn prune\n</code></pre>"},{"location":"quick_guide/","title":"Docker Tutorial","text":""},{"location":"quick_guide/#overview","title":"Overview","text":"<p>Docker is an open-source platform that automates the deployment, scaling, and management of applications using containerization. Containers are lightweight, portable, and ensure consistency across different environments.</p>"},{"location":"quick_guide/#installing-docker","title":"Installing Docker","text":""},{"location":"quick_guide/#on-linux","title":"On Linux","text":"<p>To install Docker on a Linux system, follow these steps:</p> <pre><code>sudo apt-get update\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io\n</code></pre>"},{"location":"quick_guide/#on-macos","title":"On macOS","text":"<ol> <li>Download Docker Desktop for Mac from the Docker website.</li> <li>Open the downloaded <code>.dmg</code> file and drag Docker to your Applications folder.</li> <li>Open Docker from your Applications folder.</li> </ol>"},{"location":"quick_guide/#on-windows","title":"On Windows","text":"<ol> <li>Download Docker Desktop for Windows from the Docker website.</li> <li>Run the installer and follow the installation instructions.</li> <li>Start Docker Desktop from your Start menu.</li> </ol>"},{"location":"quick_guide/#basic-docker-commands","title":"Basic Docker Commands","text":""},{"location":"quick_guide/#1-docker-version","title":"1. <code>docker --version</code>","text":"<p>Check the installed Docker version.</p> <pre><code>docker --version\n</code></pre>"},{"location":"quick_guide/#example","title":"Example","text":"<pre><code>Docker version 20.10.8, build 3967b7d\n</code></pre>"},{"location":"quick_guide/#2-docker-pull","title":"2. <code>docker pull</code>","text":"<p>Download an image from Docker Hub.</p> <pre><code>docker pull image_name\n</code></pre>"},{"location":"quick_guide/#example_1","title":"Example","text":"<pre><code>docker pull nginx\n</code></pre>"},{"location":"quick_guide/#3-docker-images","title":"3. <code>docker images</code>","text":"<p>List all available Docker images on your system.</p> <pre><code>docker images\n</code></pre>"},{"location":"quick_guide/#example_2","title":"Example","text":"<pre><code>REPOSITORY          TAG       IMAGE ID       CREATED       SIZE\nnginx               latest    f6b22f3dfc8f   2 weeks ago   133MB\n</code></pre>"},{"location":"quick_guide/#4-docker-rmi","title":"4. <code>docker rmi</code>","text":"<p>Remove a Docker image.</p> <pre><code>docker rmi image_name\n</code></pre>"},{"location":"quick_guide/#example_3","title":"Example","text":"<pre><code>docker rmi nginx\n</code></pre>"},{"location":"quick_guide/#5-docker-run","title":"5. <code>docker run</code>","text":"<p>Run a Docker container from an image.</p> <pre><code>docker run [OPTIONS] image_name\n</code></pre>"},{"location":"quick_guide/#example_4","title":"Example","text":"<pre><code>docker run -d -p 80:80 nginx\n</code></pre>"},{"location":"quick_guide/#6-docker-ps","title":"6. <code>docker ps</code>","text":"<p>List running Docker containers.</p> <pre><code>docker ps\n</code></pre>"},{"location":"quick_guide/#example_5","title":"Example","text":"<pre><code>CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                NAMES\nabcd1234efgh   nginx     \"nginx -g 'daemon of\u2026\"   10 minutes ago  Up 10 minutes  0.0.0.0:80-&gt;80/tcp   quizzical_hermann\n</code></pre>"},{"location":"quick_guide/#7-docker-stop","title":"7. <code>docker stop</code>","text":"<p>Stop a running Docker container.</p> <pre><code>docker stop container_id\n</code></pre>"},{"location":"quick_guide/#example_6","title":"Example","text":"<pre><code>docker stop abcd1234efgh\n</code></pre>"},{"location":"quick_guide/#8-docker-rm","title":"8. <code>docker rm</code>","text":"<p>Remove a stopped Docker container.</p> <pre><code>docker rm container_id\n</code></pre>"},{"location":"quick_guide/#example_7","title":"Example","text":"<pre><code>docker rm abcd1234efgh\n</code></pre>"},{"location":"quick_guide/#9-docker-exec","title":"9. <code>docker exec</code>","text":"<p>Execute a command inside a running container.</p> <pre><code>docker exec -it container_id command\n</code></pre>"},{"location":"quick_guide/#example_8","title":"Example","text":"<pre><code>docker exec -it abcd1234efgh /bin/bash\n</code></pre>"},{"location":"quick_guide/#10-docker-compose","title":"10. <code>docker-compose</code>","text":"<p><code>docker-compose</code> is a tool for defining and running multi-container Docker applications.</p>"},{"location":"quick_guide/#example-docker-composeyml","title":"Example <code>docker-compose.yml</code>","text":"<pre><code>version: '3'\nservices:\n  web:\n    image: nginx\n    ports:\n      - \"8080:80\"\n  db:\n    image: postgres\n    environment:\n      POSTGRES_DB: exampledb\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n</code></pre>"},{"location":"quick_guide/#commands","title":"Commands","text":"<ul> <li>Start Services: <code>docker-compose up</code></li> <li>Stop Services: <code>docker-compose down</code></li> <li>View Logs: <code>docker-compose logs</code></li> </ul>"},{"location":"quick_guide/#dockerfile","title":"Dockerfile","text":"<p>A Dockerfile is a script that contains a series of instructions to create a Docker image.</p>"},{"location":"quick_guide/#example-dockerfile","title":"Example Dockerfile","text":"<pre><code># Use an official Python runtime as a parent image\nFROM python:3.8-slim\n\n# Set the working directory in the container\nWORKDIR /usr/src/app\n\n# Copy the current directory contents into the container at /usr/src/app\nCOPY . .\n\n# Install any needed packages specified in requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Make port 80 available to the world outside this container\nEXPOSE 80\n\n# Define environment variable\nENV NAME World\n\n# Run app.py when the container launches\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"quick_guide/#build-image","title":"Build Image","text":"<pre><code>docker build -t my-python-app .\n</code></pre>"},{"location":"quick_guide/#run-container","title":"Run Container","text":"<pre><code>docker run -p 4000:80 my-python-app\n</code></pre>"},{"location":"quick_guide/#summary","title":"Summary","text":"<p>Docker simplifies application deployment by using containers that package code and dependencies together. Understanding these basic commands will help you get started with Docker and manage your containerized applications effectively. For more detailed information, refer to the official Docker documentation.</p>"}]}